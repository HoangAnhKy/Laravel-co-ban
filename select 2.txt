-------------------------------------------------- Link tham khảo --------------------------------------------------------
https://select2.org
https://stackoverflow.com/questions/20926707/how-to-use-select2-with-json-via-ajax-request
https://datatables.net/reference/api/search()


-------------------------------------------------------------------------------------------------------------------------
* ưu điểm của select 2 là có thể dùng bảng đó để thêm 1 select cái khác chỉ cần thay column với id cột
vd:

 $("#select-table").change(function () {
      table.column(5).search(this.value).draw();
  })

 $("#select-status").change(function () {
   	table.column(4).search(this.value).draw();
 })

* nếu dùng relationship và datatable 2 bảng khác nhau mà dùng chung select 2 thì ta nên sử dụng thêm filterColumn trong API của datatable

	vd: lấy giả trị của bảng lớp (course) đọc qua bảng sinh viên với cột bằng course_id

		->filterColumn('{tên cột muốn sửa}', function ($query, $keyword) {
                $query->wherehas('{tên của relationship}', function ($q) use ( $keyword){
                   return $q->where('id', $keyword);
                });
            })

----------------------------------------------------------------------------------------------------------------------------

- chèn link sau vào trang sử dụng

	<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" /> 
	<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

- Tạo controller để truyền vào url

	public function apiName(Request $request)
    {
        return $this->model::query()
            ->where('name', 'like', '%'. $request->get('q').'%')
            ->get(['id','name']);
    }

- sau đó copy đoạn code sau vào, và thay thế url và tên 

$("tên").select2({
  ajax: {
    url: "https://api.github.com/search/repositories",
    dataType: 'json',
    data: function (params) {
      return {
        q: params.term, // search term
        page: params.page
      };
    },
    processResults: function (data, params) {
      params.page = params.page || 1;

      return {
        results: data.items,
        pagination: {
          more: (params.page * 30) < data.total_count
        }
      };
    },
    cache: true
  },
  placeholder: 'Search for a repository',
  allowClear: true,
});

- sau đó chỉnh lại đoạn results

	results: $.map(data, function (item) {
                    return {
                        text: item.tag_value,
                        id: item.tag_id
                    }
                })

- cuối cùng sử dụng hàm sau dể load lại dữ liệu table

	$('#select-name').change(function () {
                table.column(0).search( this.value ).draw();
        } );
